name: Docker build

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build the project using Docker
        run: |
          docker build -t romlauncher-builder .
          docker run --name extract-container romlauncher-builder
          docker cp extract-container:/usr/src/project/romlauncher.nro romlauncher.nro
          docker rm extract-container

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: romlauncher.nro
          path: romlauncher.nro

  release:
    needs: build  # Wait for the build to complete before releasing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository # Just to get the hash
        uses: actions/checkout@v3

      - name: Extract tag based on commit SHA
        id: vars
        run: echo "TAG_NAME=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Download built artifact
        uses: actions/download-artifact@v4
        with:
          name: romlauncher.nro

      - name: Create a GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: "Release ${{ env.TAG_NAME }}"
          draft: false
          prerelease: false

      - name: Upload Artifact to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: romlauncher.nro
          asset_name: romlauncher.nro
          asset_content_type: application/octet-stream
